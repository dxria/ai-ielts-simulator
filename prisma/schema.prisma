generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum QuestionType {
  QUESTION
  PROMPT
}

model Assignment {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  difficulty   String
  user         String
  questions    Question[]
  answers      Answer[]
  performances Performance[]
}

model Question {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  part         Int
  type         QuestionType
  topic        String
  text         String
  assignment   Assignment   @relation(fields: [assignmentId], references: [id])
  assignmentId Int
  answers      Answer[]
}

model Answer {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  speech        String
  user          String
  assignment    Assignment  @relation(fields: [assignmentId], references: [id])
  assignmentId  Int
  question      Question    @relation(fields: [questionId], references: [id])
  questionId    Int
  performance   Performance @relation(fields: [performanceId], references: [id])
  performanceId Int
}

model Performance {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())
  user         String
  answers      Answer[]
  startTime    DateTime
  endTime      DateTime
  assignment   Assignment? @relation(fields: [assignmentId], references: [id])
  assignmentId Int?
  evaluation   Evaluation?
}

model Evaluation {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  user          String
  feedback      String
  performance   Performance @relation(fields: [performanceId], references: [id])
  performanceId Int         @unique
}
